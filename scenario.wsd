Dev
	- Scenario: Request Database
		- ThirdAPI.RequestDatabase()
		{
			databasename: "promome"
			productCollectionname: "Product",
		}

	- Scenario: Create database schema => example [product option], [shop table], [order]
		- DatabaseSchemaManagementAPI.CreateCollection("ProductOption")
		{ fields: [
			{"key":"string"},
			{"values":"string[]"}
		]}
		- DatabaseSchemaManagementAPI.CreateCollection("ShopTable")
		{ fields: [
			{"tableName":"string"}
		]}
		- DatabaseSchemaManagementAPI.CreateCollection("order")
		{ fields: [
			{"userDisplayname":"string"},
			{"createdDate":"DateTime"}
		]}
		- DatabaseSchemaManagementAPI.CreateCollection("OpenShop")
		{ fields: [
			{"openDate":"DateTime"}
		]}

	- scenario: Deploy schema to sandbox for test with dev merchant
		- DatabaseSchemaManagementAPI.DeployToSandboxEnvironment()

	- scenario: Create dev merchant on sandbox
		* ThirdAPISandbox.RegisterMContent()
		* ThirdAPISandbox.RegisterOptionMContent()
		* ThirdAPISandbox.MappingOptionMContent() ???
		* ThirdAPISandbox.CreateDevMerchant()
		* ManaMobileAPISandbox.SubscribeService()
		- DatabaseManagementAPISandbox.CreateDocument() // create product data
		- ThirdAPISandbox.RegisterProduct()
		* ... cart scenario on sandbox ...

	- Scenario: Change database schema
		- DatabaseSchemaManagementAPI.CreateCollection("bill")
		{ fields: [
			{"billid":"string"},
			{"createdDate":"DateTime"}
		]}
		- DatabaseSchemaManagementAPI.ConfigCollection("order")
		{ fields: [
			{"userDisplayname":"string"},
			{"orderDate":"DateTime"}
			{"finishDate":"DateTime"}
		]}
		- DatabaseSchemaManagementAPI.DeleteCollection("OpenShop")
		- DatabaseSchemaManagementAPI.SetupCollectionMappings("order")
		{ mapFields: [
			{
				"oldFieldName":"createdDate",
				"newFieldName":"orderDate"
			}
		]}
		- DatabaseSchemaManagementAPI.DeployToSandboxEnvironment()

	- scenario: Deploy schema to production
		- DatabaseSchemaManagementAPI.DeployToProductionEnvironment()
		
	- Scenario: prepare product mcontent
		* ThirdAPI.RegisterMContent()
		* ThirdAPI.RegisterOptionMContent()
		* ThirdAPI.MappingOptionMContent() ???

	- Scenario: External product prepare product api
		- ThirdAPI.RegisterProductApi()

Merchant
	- Scenario: Merchant subscribe service
		* ManaMobileAPI.SubscribeService()
			- ManaSystem => Create Database by schema
			- ManaSystem => Hook to Dev
		- Service => Init database data
			- DatabaseManagementAPI.CreateDocument()

	- Scenario: Create product data
		[Product]
		- DatabaseManagementAPI.CreateDocument()
		[Options]
		- DatabaseManagementAPI.CreateDocument()

	- Scenario: Register product to mana
		- ThirdAPI.RegisterProduct()
		{ 
			name: shoes,
			mcontentUrl: ManaMobileAPI.GetProductMContent(),
			dataHookUrl: ManaMobileAPI.GetProduct(),
			// กำหนดทีเดียวใช้ได้หลาย product ???
			options:[
				{ optionMContentId: "mct123", dataHookUrl: "" }
				{ optionMContentId: "mct456", dataHookUrl: "" }
			]
		}
		* Register CollectibleOptions
		***** how to use mcontent option? *****

User
	- Scenario: User scan product QR
		* Visit()
		* FormController.GetMContent()
			- ManaMobileAPI.GetProductMContent()
		* FormController.GetData()
			- ManaMobileAPI.GetProduct()
		* ManaMobileAPI.GetOptionMContent()
			- ?????

	***** Cart scenario => ลงรายละเอียดไปจนถึงตอนดึงข้อมูล
	* FormController.Submit()
	
	- Scenario: User add coupon to cart
		* CartHook()
			ThirdAPI.GetCoupon()  			
		
	- Scenario: User add product to cart
		* ProductHook()
			DatabaseManagementAPI.GetDocument()  			
		* CartHook()
			DatabaseManagementAPI.GetDocument() : Check stock	

	- Scenario: User checkout
		* TakeAction()
		* OrderHook()
			DatabaseManagementAPI.EditDocument() : Check stock

	- Scenario: User pay
		* TakeAction()
		* PaymentHook()

